# vim: set ft=conf :

## Color Scheme
# background_opacity      0.9
include themes/nord-deep.conf

## OS-specific settings
include os.conf

## Fonts
font_family Iosevka N Term
bold_font auto
italic_font auto
bold_italic_font auto

## Cursor
cursor_shape beam
cursor_stop_blinking_after 15.0

## Scrollback
scrollback_lines 10000

## Mouse
mouse_hide_wait 3.0
url_style none
detect_urls yes
copy_on_select no

## Window Layout
enabled_layouts splits,fat,tall,vertical,horizontal,stack
remember_window_size no
initial_window_width 900
initial_window_height 600

## Tab Bar
tab_bar_edge top
tab_bar_style powerline
tab_powerline_style round
active_tab_font_style bold
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{layout_name[:2].upper()}î‚»{title.split()[0]}"

# Scroll through the buffer history
scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

## Keyboard Shortcuts

# Reload config
map supper+shift+, load_config_file

# New tab
map super+t new_tab

# Close current window and create new
confirm_os_window_close -1
map super+w close_window_with_confirmation
map super+shif+n new_os_window

# Split retaining the cwd
map super+d launch --location vsplit --cwd current
map super+shift+d launch --location hsplit --cwd current

# Switch focus to the neighboring window in the indicated direction
map super+alt+left neighboring_window left
map super+alt+right neighboring_window right
map super+alt+up neighboring_window up
map super+alt+down neighboring_window down

# Rezise Windows
map super+ctrl+left resize_window wider
map super+ctrl+right resize_window narrower
map super+ctrl+up resize_window taller
map super+ctrl+down resize_window shorter
map super+ctrl+r resize_window reset

# Zoom active window by switching to the stack layout
map super+shift+enter toggle_layout stack

# Switch layouts
map super+alt+l next_layout
map super+shift+l goto_layout splits

# Jump to beginning and end of word
map alt+left send_text all \x1b\x62
map alt+right send_text all \x1b\x66

# Jump to beginning and end of line
# Note: Use Home/End instead of ctrl-a/ctrl-e
map super+left send_text all \x1b[H
map super+right send_text all \x1b[F

# Delete line (macOS)
map super+backspace send_text all \x15

# Jump to prev/next shell prompt
map super+up scroll_to_prompt -1
map super+down scroll_to_prompt 1

# Browse scrollback buffer in pager
map super+shift+h show_scrollback
map super+f show_scrollback

# Find and paste into terminal
map super+shift+p>f kitten hints --type path --hints-background-color cyan --program -
map super+shift+p>l kitten hints --type line --hints-background-color cyan --program -
map super+shift+p>u kitten hints --type url --hints-background-color cyan --program -
map super+shift+p>w kitten hints --type word --hints-background-color cyan --program -

# Find and open
map super+shift+o>f kitten hints --type path --hints-background-color cyan --program default
map super+shift+o>u kitten hints --type url --hints-background-color cyan --program default

# Find and coppy to clipboard
map super+c copy_to_clipboard
map super+shift+c>h launch --type=overlay --cwd=~/.config/kitty --stdin-source=@screen_scrollback hx -
map super+shift+c>f kitten hints --type path --hints-background-color cyan --program @
map super+shift+c>l kitten hints --type line --hints-background-color cyan --program @
map super+shift+c>u kitten hints --type url --hints-background-color cyan --program @
map super+shift+c>w kitten hints --type word --hints-background-color cyan --program @

# Map shift+enter to new line
map shift+enter send_text all \n

# unmap (passing it to the program running in kitty)
map super+r
map super+k
map super+alt+k
